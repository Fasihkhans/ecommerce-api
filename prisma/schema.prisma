// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model Customer {
  customer_id   Int       @id @default(autoincrement())
  first_name    String
  last_name     String
  email         String    @unique
  password      String
  address       String
  phone_number  String
  orders        Order[]
  payments      Payment[]
  shipments     Shipment[]
  carts         Cart[]
  wishlists     Wishlist[]
}

model Order {
  order_id       Int         @id @default(autoincrement())
  order_date     DateTime
  total_price    Decimal
  customer_id    Int
  payment_id     Int
  shipment_id    Int

  customer       Customer    @relation(fields: [customer_id], references: [customer_id])
  payment        Payment     @relation(fields: [payment_id], references: [payment_id])
  shipment       Shipment    @relation(fields: [shipment_id], references: [shipment_id])
  order_items    Order_Item[]
}

model Payment {
  payment_id     Int        @id @default(autoincrement())
  payment_date   DateTime
  payment_method String
  amount         Decimal
  customer_id    Int

  customer       Customer   @relation(fields: [customer_id], references: [customer_id])
  orders         Order[]
}

model Shipment {
  shipment_id    Int        @id @default(autoincrement())
  shipment_date  DateTime
  address        String
  city           String
  state          String
  country        String
  zip_code       String
  customer_id    Int

  customer       Customer   @relation(fields: [customer_id], references: [customer_id])
  orders         Order[]
}

model Cart {
  cart_id        Int      @id @default(autoincrement())
  quantity       Int
  customer_id    Int
  product_id     Int

  customer       Customer @relation(fields: [customer_id], references: [customer_id])
  product        Product  @relation(fields: [product_id], references: [product_id])
}

model Wishlist {
  wishlist_id    Int      @id @default(autoincrement())
  customer_id    Int
  product_id     Int

  customer       Customer @relation(fields: [customer_id], references: [customer_id])
  product        Product  @relation(fields: [product_id], references: [product_id])
}

model Product {
  product_id     Int         @id @default(autoincrement())
  SKU            String      @unique
  description    String
  price          Decimal
  stock          Int
  category_id    Int

  category       Category    @relation(fields: [category_id], references: [category_id])
  order_items    Order_Item[]
  carts          Cart[]
  wishlists      Wishlist[]
}

model Order_Item {
  order_item_id  Int      @id @default(autoincrement())
  quantity       Int
  price          Decimal
  product_id     Int
  order_id       Int

  product        Product  @relation(fields: [product_id], references: [product_id])
  order          Order    @relation(fields: [order_id], references: [order_id])
}

model Category {
  category_id    Int       @id @default(autoincrement())
  name           String

  products       Product[]
}